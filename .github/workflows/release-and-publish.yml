name: Release and Publish

on:
  push:
    branches:
      - main

jobs:
  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Set up .netrc
        run: |
          echo "machine github.com" >> ~/.netrc
          echo "login ${{ secrets.PKG_AUTH_USERNAME }}" >> ~/.netrc
          echo "password ${{ secrets.PKG_AUTH_PASSWORD }}" >> ~/.netrc
          chmod 600 ~/.netrc

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PKG_AUTH_PASSWORD }}  # Removed the repository field

      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.4'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Create .env file
        run: |
          echo "GOOGLE_MAPS_API_KEY_ANDROID=${{ secrets.GOOGLE_MAPS_API_KEY_ANDROID }}" > .env
          echo "GOOGLE_MAPS_API_KEY_IOS=${{ secrets.GOOGLE_MAPS_API_KEY_IOS }}" >> .env
          echo "API_KEY=${{ secrets.DRIVE_APP_API_KEY }}" >> .env
          echo "SECRET_KEY=${{ secrets.DRIVE_APP_SECRET_KEY }}" >> .env
          echo "ANDROID_BANNER_ADMOB_ID=${{ secrets.DRIVE_APP_ANDROID_BANNER_ADMOB_ID }}" >> .env
          echo "ANDROID_APP_OPEN_ADMOB_ID=${{ secrets.DRIVE_APP_ANDROID_APP_OPEN_ADMOB_ID }}" >> .env
          echo "ANDROID_INTERSTITIAL_ADMOB_ID=${{ secrets.DRIVE_APP_ANDROID_INTERSTITIAL_ADMOB_ID }}" >> .env
          echo "SIGNATURE=${{ secrets.SERCH_SIGNATURE }}" >> .env

      - name: Decode and save keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/keystore.jks

      - name: Setup Key Properties
        run: |
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties

      - name: Build App Bundle
        run: flutter build appbundle

      - name: Upload App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: Serch Drive
          path: build/app/outputs/bundle/release/app-release.aab

      - name: Get version from pubspec.yaml
        id: get_version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

#      - name: Deploy to Huawei App Gallery
#        uses: muhamedzeema/appgallery-deply-action@main
#        with:
#          client-id: ${{ secrets.HUAWEI_CLIENT_ID }}
#          client-key: ${{ secrets.HUAWEI_CLIENT_KEY }}
#          app-id: ${{ secrets.HUAWEI_USER_APP_ID }}
#          file-extension: "aab"
#          file-path: "build/app/outputs/bundle/release/app-release.aab"
#          file-name: "Serch - v${{ env.VERSION }}"
#          submit: false

      - name: Create Tag
        run: |
          git tag "v${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}"
          echo "Tag created: v${{ env.VERSION }}"

      - name: Install GitHub CLI
        run: sudo apt-get install gh

      - name: Create Release
        id: create_release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${{ env.VERSION }}" --title "Release v${{ env.VERSION }}" --notes "Release notes for version v${{ env.VERSION }}" --generate-notes
